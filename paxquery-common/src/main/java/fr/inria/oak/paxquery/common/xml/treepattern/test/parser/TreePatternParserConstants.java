/*******************************************************************************
 * Copyright (C) 2013, 2014 by Inria and Paris-Sud University
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/
/* Generated By:JJTree&JavaCC: Do not edit this line. TreePatternParserConstants.java */
package fr.inria.oak.paxquery.common.xml.treepattern.test.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface TreePatternParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 6;
  /** RegularExpression Id. */
  int STRING = 7;
  /** RegularExpression Id. */
  int ATTRDOCID = 8;
  /** RegularExpression Id. */
  int ATTRID = 9;
  /** RegularExpression Id. */
  int ATTRVAL = 10;
  /** RegularExpression Id. */
  int ATTRCONT = 11;
  /** RegularExpression Id. */
  int PREDCODE = 12;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "<INTEGER_LITERAL>",
    "<STRING>",
    "\"docID\"",
    "\"ID\"",
    "\"Val\"",
    "\"Cont\"",
    "<PREDCODE>",
    "\";\"",
    "\"/\"",
    "\"o\"",
    "\"O\"",
    "\"[Namespace=\"",
    "\"]\"",
    "\"E:\"",
    "\"A:\"",
    "\"s\"",
    "\"i\"",
    "\"n\"",
    "\"u\"",
    "\"R\"",
    "\"[Tag=\"",
    "\"Tag\"",
    "\"[Val\"",
    "\",\"",
    "\"//\"",
    "\"j\"",
  };

}
